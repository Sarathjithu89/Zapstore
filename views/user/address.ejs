<%-include('../partials/header.ejs') %> <% const addressesData =
JSON.stringify(addresses || []) %>
<link
  href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css"
  rel="stylesheet"
/>
<script>
  const addressesData = <%- JSON.stringify(addresses) %>;
</script>
<style>
  /* Breadcrumb */
  .shop-breadcrumb {
    padding: 20px 0;
    background-color: #f6f6f6;
    margin-bottom: 40px;
  }

  .breadcrumb-content {
    display: flex;
    flex-direction: column;
  }

  .breadcrumb-content h2 {
    font-size: 30px;
    font-weight: 600;
    margin-bottom: 10px;
    color: #333;
  }

  .breadcrumb-content ol {
    display: flex;
    list-style: none;
    padding: 0;
    margin: 0;
    font-size: 14px;
  }

  .breadcrumb-content li + li:before {
    content: "â€º";
    padding: 0 8px;
    color: #777;
  }

  .breadcrumb-content a {
    color: #555;
    text-decoration: none;
    transition: color 0.3s;
  }

  .breadcrumb-content a:hover {
    color: #ff6a00;
  }
  .card-green {
    background-color: #add8e6;
  }
  .main {
    padding: 30px 0;
  }

  .dashboard-menu {
    background-color: #cce3e6;
    border-radius: 10px;
    padding: 15px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  }

  .dashboard-menu .nav-link {
    font-weight: bold;
    color: #30683c;
    box-shadow: 0 4px 10px rgba(123, 131, 112, 0.3),
      0 4px 20px rgba(0, 191, 255, 0.2);
    transition: box-shadow 0.3s ease;
  }

  .dashboard-menu .nav-link:hover {
    color: #00bfff;
    box-shadow: 0 4px 15px rgba(173, 255, 47, 0.5),
      0 6px 25px rgba(0, 191, 255, 0.4);
  }

  .card {
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
    margin-bottom: 20px;
  }

  .card-header {
    background-color: #487379;
    color: white;
    border-radius: 10px 10px 0 0;
  }

  .btn-success {
    background-color: #577194;
    border-color: #6bb87d;
  }

  .btn-success:hover {
    background-color: #506955;
  }

  .form-group {
    margin-bottom: 15px;
  }

  .required {
    color: red;
  }

  @media (max-width: 768px) {
    .dashboard-menu {
      padding: 10px;
    }

    .card {
      margin-bottom: 15px;
    }
  }

  .page-header.breadcrumb-wrap {
    background-color: #eee2e9;
    padding: 15px 0;
  }

  .breadcrumb {
    display: flex;
    align-items: center;
    font-family: "Arial", sans-serif;
    font-size: 16px;
    color: #121311;
  }

  .breadcrumb a {
    color: #007bff;
    text-decoration: none;
    position: relative;
    margin: 0 5px;
  }

  .breadcrumb a:hover {
    color: #0056b3;
  }

  .breadcrumb span {
    margin: 0 5px;
    color: #999;
  }

  .breadcrumb a::after {
    content: "";
    position: absolute;
    width: 100%;
    height: 2px;
    background: #6e6e3a;
    left: 0;
    bottom: -2px;
    transform: scaleX(0);
    transition: transform 0.3s ease;
  }

  .breadcrumb a:hover::after {
    transform: scaleX(1);
  }

  .sidebar {
    background-color: white;
    padding: 20px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    border-radius: 2px;
  }
  .sidebar h2 {
    font-size: 25px;
  }

  .sidebar a {
    color: #333;
    display: block;
    padding: 10px 0;
    text-decoration: none;
    transition: all 0.3s ease;
  }

  .sidebar a.active {
    color: #ffd700;
    font-weight: bold;
  }

  .sidebar a:hover {
    color: #ffd700;
    transform: translateX(5px);
  }

  .sidebar a i,
  .sidebar a svg {
    margin-right: 10px;
  }

  .main-content {
    min-width: 300px;
    max-width: 800px;
    background-color: white;
    padding: 25px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    border-radius: 2px;
  }

  .main-content h2 {
    font-size: 25px;
    color: #333;
    border-bottom: 2px solid #f0f0f0;
    padding-bottom: 10px;
  }

  .form-control:focus {
    border-color: #ff6600;
    box-shadow: 0 0 0 0.2rem rgba(255, 102, 0, 0.25);
  }

  .address-card {
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 20px;
    position: relative;
    transition: all 0.3s ease;
  }

  .address-card:hover {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  }

  .address-card h5 {
    margin-bottom: 10px;
    font-weight: 600;
    color: #333;
  }
  .address-info p {
    margin-bottom: 0;
  }

  .address-type {
    position: absolute;
    top: 15px;
    right: 15px;
    background-color: #f0f0f0;
    padding: 3px 10px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 600;
  }

  .address-type.home {
    background-color: #e6f7ff;
    color: #0066cc;
  }

  .address-type.work {
    background-color: #fff2e6;
    color: #ff6600;
  }

  .address-type.other {
    background-color: #f0f0f0;
    color: #666;
  }

  .address-actions {
    margin-top: 15px;
    display: flex;
    gap: 10px;
  }

  .default-badge {
    position: absolute;
    top: 17px;
    right: 80px;
    background-color: #28a745;
    color: white;
    font-size: 12px;
    padding: 3px 8px;
    border-radius: 4px;
    margin-left: 10px;
  }

  .add-address-btn {
    margin-bottom: 20px;
  }
  #addressForm input {
    height: 38px;
  }
  .form-group {
    justify-content: left;
    align-items: center;
  }
</style>
<div class="header-bottom header-sticky d-none d-lg-block d-xl-block mb-0">
  <div class="container">
    <div class="row">
      <div class="col-lg-12">
        <!-- Begin Header Bottom Menu Area -->
        <div class="hb-menu">
          <nav>
            <ul>
              <li class="dropdown-holder">
                <a href="/">Home</a>
              </li>
              <li class="megamenu-holder active">
                <a href="/products">Shop</a>
              </li> 
              <li><a href="/cart">Cart</a></li>
              <li><a href="/about">About Us</a></li>
              <li><a href="/contact">Contact</a></li>
            </ul>
          </nav>
        </div>
        <!-- Header Bottom Menu Area End Here -->
      </div>
    </div>
  </div>
</div>
<!-- Sticky Header Area End -->

<!-- Begin Breadcrumb Area -->
<div class="shop-breadcrumb">
  <div class="container">
    <div class="row">
      <div class="col-12">
        <div class="breadcrumb-content">
          <ol>
            <li><a href="/">Home</a></li>
            <li>profile</li>
            <li>Address</li>
          </ol>
        </div>
      </div>
    </div>
  </div>
</div>
<!-- Breadcrumb Area End -->

  <div class="container mt-3 mb-5">
    <div class="row justify-content-center">
      <!-- Sidebar -->
      <div class="col-md-3 col-sm-9 sidebar mx-1">
        <h2>My Account</h2>
        <a href="/users/profile"
          ><svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            fill="currentColor"
            class="bi bi-person"
            viewBox="0 0 16 16"
          >
            <path
              d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6m2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0m4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4m-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10s-3.516.68-4.168 1.332c-.678.678-.83 1.418-.832 1.664z"
            />
          </svg>
          Details</a
        >
        <a href="/users/addresses" class="active"
          ><svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            fill="currentColor"
            class="bi bi-geo-alt"
            viewBox="0 0 16 16"
          >
            <path
              d="M12.166 8.94c-.524 1.062-1.234 2.12-1.96 3.07A32 32 0 0 1 8 14.58a32 32 0 0 1-2.206-2.57c-.726-.95-1.436-2.008-1.96-3.07C3.304 7.867 3 6.862 3 6a5 5 0 0 1 10 0c0 .862-.305 1.867-.834 2.94M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10"
            />
            <path
              d="M8 8a2 2 0 1 1 0-4 2 2 0 0 1 0 4m0 1a3 3 0 1 0 0-6 3 3 0 0 0 0 6"
            />
          </svg>
          Address</a
        >
        <a href="/user/orders"
          ><svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            fill="currentColor"
            class="bi bi-cart2"
            viewBox="0 0 16 16"
          >
            <path
              d="M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5M3.14 5l1.25 5h8.22l1.25-5zM5 13a1 1 0 1 0 0 2 1 1 0 0 0 0-2m-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0m9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2m-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0"
            />
          </svg>
          Orders</a
        >
        <a href="/user/wishlist"
          ><svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            fill="currentColor"
            class="bi bi-heart"
            viewBox="0 0 16 16"
          >
            <path
              d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143q.09.083.176.171a3 3 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15"
            />
          </svg>
          Wishlist</a
        >
        <a href="/wallet"
          ><svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            fill="currentColor"
            class="bi bi-wallet-fill"
            viewBox="0 0 16 16"
          >
            <path
              d="M1.5 2A1.5 1.5 0 0 0 0 3.5v2h6a.5.5 0 0 1 .5.5c0 .253.08.644.306.958.207.288.557.542 1.194.542s.987-.254 1.194-.542C9.42 6.644 9.5 6.253 9.5 6a.5.5 0 0 1 .5-.5h6v-2A1.5 1.5 0 0 0 14.5 2z"
            />
            <path
              d="M16 6.5h-5.551a2.7 2.7 0 0 1-.443 1.042C9.613 8.088 8.963 8.5 8 8.5s-1.613-.412-2.006-.958A2.7 2.7 0 0 1 5.551 6.5H0v6A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5z"
            />
          </svg>
          Wallet</a
        >
        <a href="mycoupons"
          ><svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            fill="currentColor"
            class="bi bi-cash"
            viewBox="0 0 16 16"
          >
            <path d="M8 10a2 2 0 1 0 0-4 2 2 0 0 0 0 4" />
            <path
              d="M0 4a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1zm3 0a2 2 0 0 1-2 2v4a2 2 0 0 1 2 2h10a2 2 0 0 1 2-2V6a2 2 0 0 1-2-2z"
            />
          </svg>
          My Coupons</a
        >
        <a href="#" onclick="confirmLogout(event)" class="text-danger mt-4"
          ><svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            fill="currentColor"
            class="bi bi-box-arrow-right"
            viewBox="0 0 16 16"
          >
            <path
              fill-rule="evenodd"
              d="M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0z"
            />
            <path
              fill-rule="evenodd"
              d="M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708z"
            />
          </svg>
          Logout</a
        >
      </div>

      <!-- Main Content -->
      <div class="col-md-8 col-sm-9 main-content mx-1">
        <h2>Your Addresses</h2>
        <!-- <button
          class="btn btn-primary add-address-btn"
          onclick="openAddAddressModal()"
        >
          <i class="bi bi-plus-circle"></i> Add New Address
        </button> -->
        <button
          type="button"
          class="btn btn-primary add-address-btn"
          onclick="addAddress()"
        >
          <i class="bi bi-plus-circle"></i> Add New Address
        </button>

        <div class="addresses-container">
          <% if (addresses && addresses.length > 0) { %> <%
          addresses.forEach(address => { %>
          <div class="address-card">
            <span class="address-type <%= address.type.toLowerCase() %>"
              ><%= address.type %></span
            >
            <h5>
              <%= address.fullName %> <% if (address.isDefault) { %><span
                class="default-badge"
                >Default</span
              ><% } %>
            </h5>
            <div class="address-info">
              <p>
                <%= address.addressLine %>,<br />
                <% if (address.landMark) { %><%= address.landMark %>,<br /><% }
                %> <%= address.city %>, <%= address.state %> - <%=
                address.pincode %><br />
                <%= address.country %>
              </p>
              <% if(address.phone){ %>
              <p><strong>Phone:</strong> <%= address.phone %></p>
              <% } else{ %>
              <p>
                <strong> Phone:</strong> Please add a Phone number in your
                Profile
              </p>
              <% } %> <% if(address.altPhone) {%>
              <p><strong>Alternat Phone:</strong> <%= address.altPhone %></p>
              <% }; %>
            </div>
            <div class="address-actions">
              <button
                class="btn btn-sm btn-outline-primary"
                onclick="editAddress('<%= address._id %>')"
              >
                <i class="bi bi-pencil"></i> Edit
              </button>
              <% if (!address.isDefault) { %>
              <button
                class="btn btn-sm btn-outline-success"
                onclick="setDefaultAddress('<%= address._id %>')"
              >
                <i class="bi bi-check-circle"></i> Set as Default
              </button>
              <% } %>
              <button
                class="btn btn-sm btn-outline-danger"
                onclick="deleteAddress('<%= address._id %>')"
              >
                <i class="bi bi-trash"></i> Delete
              </button>
            </div>
          </div>
          <% }); %> <% } else { %>
          <div class="alert alert-info">
            You haven't added any addresses yet. Add your first address by
            clicking the button above.
          </div>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Add/Edit Address Modal -->
<div
  class="modal fade"
  id="addressModal"
  tabindex="-1"
  aria-labelledby="addressModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addressModalLabel">Add New Address</h5>
        <button
          type="button"
          class="btn-close"
          data-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <!-- modal body -->
      <div class="modal-body">
        <form id="addressForm">
          <input type="hidden" id="addressId" name="addressId" />
          <div class="row">
            <div class="col-md-6 form-group">
              <label for="fullName"
                >Full Name <span class="required">*</span></label
              >
              <input
                type="text"
                id="fullName"
                name="fullName"
                class="form-control"
                required
              />
            </div>
            <div class="col-md-6 form-group">
              <label for="phone"
                >Alternate Phone Number <span class="required">*</span></label
              >
              <div class="input-group">
                <!-- <div class="input-group-prepend">
                  <select
                    class="form-control"
                    id="countryCode"
                    name="countryCode"
                  >
                    <option value="+91">+91</option>
                    <option value="+1">+1</option>
                    <option value="+44">+44</option>
                    <option value="+61">+61</option>
                    <option value="+81">+81</option>
                  </select>
                </div> -->
                <input
                  type="text"
                  id="altPhone"
                  name="altPhone"
                  class="form-control"
                  pattern="[0-9]{10}"
                  title="Please enter Alternate phone number"
                />
              </div>
            </div>
            <div class="col-md-12 form-group">
              <label for="addressLine"
                >Address Line<span class="required">*</span></label
              >
              <input
                type="text"
                id="addressLine"
                name="addressLine"
                class="form-control"
                placeholder="House No., Building Name"
                required
              />
            </div>
            <div class="col-md-12 form-group">
              <label for="LandMark">Landmark</label>
              <input
                type="text"
                id="LandMark"
                name="landMark"
                class="form-control"
                placeholder="Landmark"
              />
            </div>

            <div class="col-md-6 form-group">
              <label for="city">City <span class="required">*</span></label>
              <input
                type="text"
                id="city"
                name="city"
                class="form-control"
                required
              />
            </div>
            <div class="col-md-6 form-group">
              <label for="state">State <span class="required">*</span></label>
              <input
                type="text"
                id="state"
                name="state"
                class="form-control"
                required
              />
            </div>
            <div class="col-md-6 form-group">
              <label for="pincode"
                >Pincode <span class="required">*</span></label
              >
              <input
                type="text"
                id="pincode"
                name="pincode"
                class="form-control"
                pattern="[0-9]{6}"
                title="Please enter a valid 6-digit pincode"
                required
              />
            </div>
            <div class="col-md-6 form-group">
              <label for="country"
                >Country <span class="required">*</span></label
              >
              <select id="country" name="country" class="form-control" required>
                <option value="India">India</option>
                <option value="United States">United States</option>
                <option value="United Kingdom">United Kingdom</option>
                <option value="Canada">Canada</option>
                <option value="Australia">Australia</option>
              </select>
            </div>
            <div class="col-md-6 form-group">
              <label for="addressType"
                >Address Type <span class="required">*</span></label
              >
              <select
                id="addressType"
                name="addressType"
                class="form-control"
                required
              >
                <option value="Home">Home</option>
                <option value="Work">Work</option>
                <option value="Other">Other</option>
              </select>
            </div>
            <div class="col-md-6 form-group">
              <div class="form-check mt-5">
                <input
                  class="form-check-input"
                  type="checkbox"
                  id="isDefault"
                  name="isDefault"
                  style="height: 15px"
                />
                <label class="form-check-label" for="isDefault">
                  Set as default address
                </label>
              </div>
            </div>
          </div>
        </form>
      </div>
      <!-- modal body end -->
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">
          Cancel
        </button>
        <button type="button" class="btn btn-success" onclick="saveAddress()">
          Save Address
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  function addAddress() {
    const modalElement = document.getElementById("addressModal");
    let addressModal = new bootstrap.Modal(modalElement);

    document.getElementById("addressId").value = "";
    document.getElementById("fullName").value = "";
    document.getElementById("addressLine").value = "";
    document.getElementById("LandMark").value = "";
    document.getElementById("city").value = "";
    document.getElementById("state").value = "";
    document.getElementById("pincode").value = "";
    document.getElementById("country").value = "";
    document.getElementById("addressType").value = "";
    document.getElementById("altPhone").value = "";
    document.getElementById("isDefault").checked = "";
    document.getElementById("addressModalLabel").textContent =
      "Add New Address";
    addressModal.show();
  }

  function editAddress(addressId) {
    try {
      const modalElement = document.getElementById("addressModal");
      if (!modalElement) {
        console.error("Modal element not found.");
        return;
      }
      let addressModal = new bootstrap.Modal(modalElement);
      const address = addressesData.find((a) => a._id === addressId);

      if (!address) {
        console.error("Address not found for ID:", addressId);
        return;
      }

      document.getElementById("addressId").value = address._id;
      document.getElementById("fullName").value = address.fullName;
      document.getElementById("addressLine").value = address.addressLine;
      document.getElementById("LandMark").value = address.landMark || "";
      document.getElementById("city").value = address.city;
      document.getElementById("state").value = address.state;
      document.getElementById("pincode").value = address.pincode;
      document.getElementById("country").value = address.country;
      document.getElementById("addressType").value = address.type;
      document.getElementById("altPhone").value = address.altPhone;
      document.getElementById("isDefault").checked = address.isDefault;

      document.getElementById("addressModalLabel").textContent = "Edit Address";
      addressModal.show();
    } catch (error) {
      console.error("An error occurred:", error);
    }
  }

  function saveAddress() {
    const form = document.getElementById("addressForm");
    if (form.checkValidity()) {
      const formData = new FormData(form);
      const addressData = {
        _id: formData.get("addressId") || null,
        fullName: formData.get("fullName"),
        // phone: formData.get("phone"),
        addressLine: formData.get("addressLine"),
        landMark: formData.get("landMark"),
        altPhone: formData.get("altPhone"),
        city: formData.get("city"),
        state: formData.get("state"),
        pincode: formData.get("pincode"),
        country: formData.get("country"),
        type: formData.get("addressType"),
        isDefault: document.getElementById("isDefault").checked,
      };

      fetch("/users/addresses", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(addressData),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            Swal.fire({
              icon: "success",
              title: "Success!",
              text: data.message || "Address saved successfully",
              timer: 2000,
              showConfirmButton: false,
            }).then(() => {
              window.location.reload();
            });
          } else {
            Swal.fire({
              icon: "error",
              title: "Oops...",
              text: data.message || "There was an error saving your address",
            });
          }
        })
        .catch((error) => {
          console.error("Error:", error);
          Swal.fire({
            icon: "error",
            title: "Oops...",
            text: "An unexpected error occurred. Please try again.",
          });
        });

      addressModal.hide();
    } else {
      form.reportValidity();
    }
  }

  function setDefaultAddress(addressId) {
    Swal.fire({
      title: "Set as Default?",
      text: "Do you want to set this as your default address?",
      icon: "question",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Yes, set as default",
    }).then((result) => {
      if (result.isConfirmed) {
        // Here you would send this data to the server
        fetch(`/users/addresses/${addressId}/default`, {
          method: "PATCH",
          headers: {
            "Content-Type": "application/json",
          },
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.success) {
              Swal.fire({
                icon: "success",
                title: "Success!",
                text: "Default address updated successfully",
                timer: 2000,
                showConfirmButton: false,
              }).then(() => {
                window.location.reload();
              });
            } else {
              Swal.fire({
                icon: "error",
                title: "Oops...",
                text:
                  data.message ||
                  "There was an error updating your default address",
              });
            }
          })
          .catch((error) => {
            console.error("Error:", error);
            Swal.fire({
              icon: "error",
              title: "Oops...",
              text: "An unexpected error occurred. Please try again.",
            });
          });
      }
    });
  }

  function deleteAddress(addressId) {
    Swal.fire({
      title: "Are you sure?",
      text: "This address will be permanently deleted!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "Yes, delete it!",
    }).then((result) => {
      if (result.isConfirmed) {
        // Here you would send this data to the server
        fetch(`/users/addresses/${addressId}`, {
          method: "DELETE",
          headers: {
            "Content-Type": "application/json",
          },
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.success) {
              Swal.fire({
                icon: "success",
                title: "Deleted!",
                text: "Your address has been deleted.",
                timer: 2000,
                showConfirmButton: false,
              }).then(() => {
                window.location.reload();
              });
            } else {
              Swal.fire({
                icon: "error",
                title: "Oops...",
                text:
                  data.message || "There was an error deleting your address",
              });
            }
          })
          .catch((error) => {
            console.error("Error:", error);
            Swal.fire({
              icon: "error",
              title: "Oops...",
              text: "An unexpected error occurred. Please try again.",
            });
          });
      }
    });
  }

  function confirmLogout(event) {
    event.preventDefault();
    Swal.fire({
      title: "Logout",
      text: "Are you sure you want to logout?",
      icon: "question",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "Yes, logout",
    }).then((result) => {
      if (result.isConfirmed) {
        fetch("/logout", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
          }).then((window.location.href = "/"));
      }
    });
  }
</script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<%-include('../partials/footer.ejs') %>
