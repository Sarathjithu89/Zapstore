<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Order Details - Your Shop</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css"
      rel="stylesheet"
    />
    <style>
      /* Breadcrumb */
      .shop-breadcrumb {
        padding: 20px 0;
        background-color: #f6f6f6;
        margin-bottom: 40px;
      }

      .breadcrumb-content {
        display: flex;
        flex-direction: column;
      }

      .breadcrumb-content h2 {
        font-size: 30px;
        font-weight: 600;
        margin-bottom: 10px;
        color: #333;
      }

      .breadcrumb-content ol {
        display: flex;
        list-style: none;
        padding: 0;
        margin: 0;
        font-size: 14px;
      }

      .breadcrumb-content li + li:before {
        content: "›";
        padding: 0 8px;
        color: #777;
      }

      .breadcrumb-content a {
        color: #555;
        text-decoration: none;
        transition: color 0.3s;
      }

      .breadcrumb-content a:hover {
        color: #ff6a00;
      }

      .order-detail-container {
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        margin-bottom: 40px;
      }

      .order-header {
        background-color: #f8f9fa;
        padding: 20px;
        border-bottom: 1px solid #eee;
      }

      .order-status {
        display: inline-block;
        padding: 5px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
        margin-left: 15px;
      }

      .order-status.Pending {
        background-color: #fff2e6;
        color: #ff6600;
      }

      .order-status.Processing {
        background-color: #e6f7ff;
        color: #0066cc;
      }

      .order-status.Shipped {
        background-color: #e6ffe6;
        color: #009900;
      }

      .order-status.Delivered {
        background-color: #ccffcc;
        color: #006600;
      }

      .order-status.Cancelled {
        background-color: #ffe6e6;
        color: #cc0000;
      }

      .order-status.Return {
        background-color: #f0f0f0;
        color: #666;
      }

      .order-section {
        padding: 25px;
        border-bottom: 1px solid #eee;
      }

      .order-section:last-child {
        border-bottom: none;
      }

      .section-title {
        font-size: 18px;
        font-weight: 600;
        margin-bottom: 15px;
        color: #333;
        display: flex;
        align-items: center;
      }

      .section-title i {
        margin-right: 10px;
        color: #777;
      }

      .product-item {
        display: flex;
        padding: 15px 0;
        border-bottom: 1px solid #f0f0f0;
      }

      .product-item:last-child {
        border-bottom: none;
      }

      .product-image {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 4px;
        margin-right: 15px;
      }

      .product-details {
        flex: 1;
      }

      .product-name {
        font-weight: 500;
        margin-bottom: 5px;
        font-size: 16px;
      }

      .product-price {
        color: #555;
      }

      .product-quantity {
        color: #777;
        font-size: 14px;
      }

      .summary-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 8px;
      }

      .summary-total {
        font-weight: 600;
        font-size: 18px;
        padding-top: 10px;
        margin-top: 10px;
        border-top: 1px dashed #ddd;
      }

      .address-card {
        background-color: #f9f9f9;
        border-radius: 8px;
        padding: 15px;
      }

      .timeline {
        position: relative;
        padding-left: 30px;
      }

      .timeline:before {
        content: "";
        position: absolute;
        left: 10px;
        top: 0;
        bottom: 0;
        width: 2px;
        background: #ddd;
      }

      .timeline-item {
        position: relative;
        padding-bottom: 25px;
      }

      .timeline-item:last-child {
        padding-bottom: 0;
      }

      .timeline-item:before {
        content: "";
        position: absolute;
        left: -30px;
        top: 0;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background: #fff;
        border: 2px solid #0066cc;
      }

      .timeline-item.active:before {
        background: #0066cc;
      }

      .timeline-date {
        font-size: 12px;
        color: #777;
        margin-bottom: 3px;
      }

      .timeline-status {
        font-weight: 500;
      }

      .action-buttons {
        margin-top: 20px;
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
      }

      @media (max-width: 768px) {
        .product-item {
          flex-direction: column;
        }

        .product-image {
          margin-bottom: 10px;
          margin-right: 0;
        }
      }
    </style>
  </head>
  <body>
    <!-- Begin Breadcrumb Area -->
    <div class="shop-breadcrumb">
      <div class="container">
        <div class="row">
          <div class="col-12">
            <div class="breadcrumb-content">
              <h2>Order Details</h2>
              <ol>
                <li><a href="/">Home</a></li>
                <li><a href="/userProfile">My Account</a></li>
                <li><a href="/orders">Orders</a></li>
                <li>Order #<%= order.orderId %></li>
              </ol>
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- Breadcrumb Area End -->

    <div class="container">
      <div class="row justify-content-center">
        <div class="col-lg-10">
          <!-- Order Details Container -->
          <div class="order-detail-container">
            <!-- Order Header -->
            <div class="order-header">
              <div
                class="d-flex justify-content-between align-items-center flex-wrap"
              >
                <div>
                  <h3 class="mb-0 d-inline-block">
                    Order #<%= order.orderId %>
                  </h3>
                  <span class="order-status <%= order.status %>"
                    ><%= order.status %></span
                  >
                </div>
                <div class="text-md-end mt-3 mt-md-0">
                  <div>
                    Order Date: <%= new
                    Date(order.createdAt).toLocaleDateString('en-US', { year:
                    'numeric', month: 'long', day: 'numeric' }) %>
                  </div>
                  <% if (order.deliveredAt) { %>
                  <div>
                    Delivered On: <%= new
                    Date(order.deliveredAt).toLocaleDateString('en-US', { year:
                    'numeric', month: 'long', day: 'numeric' }) %>
                  </div>
                  <% } %>
                </div>
              </div>
            </div>

            <!-- Order Products -->
            <div class="order-section">
              <h4 class="section-title">
                <i class="bi bi-box-seam"></i> Ordered Items
              </h4>
              <div class="product-list">
                <% order.orderedItems.forEach(item => { %>
                <div class="product-item">
                  <% if (item.product.productImage &&
                  item.product.productImage.length > 0) { %>
                  <img
                    src="/uploads/product-images/<%= item.product.productImage[0] %>"
                    alt="<%= item.product.productName %>"
                    class="product-image"
                  />
                  <% } else { %>
                  <div
                    class="product-image bg-light d-flex align-items-center justify-content-center"
                  >
                    <i class="bi bi-image text-muted"></i>
                  </div>
                  <% } %>
                  <div class="product-details">
                    <div
                      class="d-flex justify-content-between align-items-start"
                    >
                      <div>
                        <h5 class="product-name">
                          <%= item.product.productName %>
                        </h5>
                        <div class="product-quantity">
                          Qty: <%= item.quantity %>
                        </div>
                      </div>
                      <div class="product-price">
                        ₹<%= item.price.toFixed(2) %>
                      </div>
                    </div>
                  </div>
                </div>
                <% }); %>
              </div>
            </div>

            <!-- Order Summary -->
            <div class="order-section">
              <h4 class="section-title">
                <i class="bi bi-receipt"></i> Order Summary
              </h4>
              <div class="row">
                <div class="col-md-6">
                  <div class="address-card">
                    <h5><i class="bi bi-geo-alt me-2"></i>Shipping Address</h5>
                    <p class="mb-0">
                      <%= order.address.name %><br />
                      <%= order.address.addressLine %>, <% if
                      (order.address.landMark) { %><%= order.address.landMark
                      %>,<% } %> <%= order.address.city %>, <%=
                      order.address.state %> - <%= order.address.pincode %><br />
                      <%= order.address.country %>
                    </p>
                  </div>
                </div>
                <div class="col-md-6">
                  <div class="order-summary">
                    <div class="summary-row">
                      <span>Subtotal:</span>
                      <span>₹<%= order.totalPrice.toFixed(2) %></span>
                    </div>
                    <% if (order.discount > 0) { %>
                    <div class="summary-row">
                      <span>Discount:</span>
                      <span>-₹<%= order.discount.toFixed(2) %></span>
                    </div>
                    <% } %> <% if (order.couponApplied) { %>
                    <div class="summary-row">
                      <span
                        ><small class="text-success"
                          >Coupon Applied</small
                        ></span
                      >
                      <span></span>
                    </div>
                    <% } %>
                    <div class="summary-row">
                      <span>Payment Method:</span>
                      <span><%= order.paymentMethod %></span>
                    </div>
                    <div class="summary-row">
                      <span>Payment Status:</span>
                      <span
                        class="<%= order.paymentStatus === 'Paid' ? 'text-success' : order.paymentStatus === 'Refunded' ? 'text-primary' : 'text-danger' %>"
                      >
                        <%= order.paymentStatus %>
                      </span>
                    </div>
                    <div class="summary-row summary-total">
                      <span>Total:</span>
                      <span>₹<%= order.finalAmount.toFixed(2) %></span>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <!-- Order Status Timeline -->
            <div class="order-section">
              <h4 class="section-title">
                <i class="bi bi-clock-history"></i> Order Status
              </h4>
              <div class="timeline">
                <% const allStatuses = ["Order Placed", "Processing", "Shipped",
                "Delivered"]; let activeFound = false; if (order.status ===
                "Cancelled") { allStatuses.splice(1, allStatuses.length,
                "Cancelled"); } else if (order.status.includes("Return")) {
                allStatuses.push("Return Requested"); if (order.status ===
                "Returned") { allStatuses.push("Returned"); } }
                allStatuses.forEach((status, index) => { let isActive = false;
                let date = null; if (status === "Order Placed") { isActive =
                true; date = order.createdAt; } else if (order.statusHistory &&
                order.statusHistory.length > 0) { const statusEntry =
                order.statusHistory.find(h => h.status.includes(status)); if
                (statusEntry) { isActive = true; date = statusEntry.date; } }
                else if (status === "Cancelled" && order.status === "Cancelled")
                { isActive = true; } else if (status === "Return Requested" &&
                order.returnRequestedAt) { isActive = true; date =
                order.returnRequestedAt; } if (isActive) { activeFound = true; }
                %>
                <div class="timeline-item <%= isActive ? 'active' : '' %>">
                  <div class="timeline-date">
                    <%= date ? new Date(date).toLocaleDateString('en-US', {year:
                    'numeric', month: 'short', day: 'numeric'}) + ' at ' + new
                    Date(date).toLocaleTimeString('en-US', {hour: '2-digit',
                    minute: '2-digit'}) : '' %>
                  </div>
                  <div class="timeline-status"><%= status %></div>
                  <% if (status === "Return Requested" && order.returnReason) {
                  %>
                  <div class="timeline-details mt-1">
                    <small>Reason: <%= order.returnReason %></small>
                    <% if (order.returnComments) { %>
                    <br /><small>Comments: <%= order.returnComments %></small>
                    <% } %>
                  </div>
                  <% } %>
                </div>
                <% activeFound = isActive ? true : activeFound; if
                (!activeFound) return; }); %>
              </div>
            </div>

            <!-- Action Buttons -->
            <div class="order-section">
              <div class="action-buttons">
                <a href="/orders" class="btn btn-outline-secondary">
                  <i class="bi bi-arrow-left"></i> Back to Orders
                </a>

                <button
                  class="btn btn-outline-primary"
                  onclick="downloadInvoice('<%= order._id %>')"
                >
                  <i class="bi bi-file-earmark-text"></i> Download Invoice
                </button>

                <% if (order.status === 'Delivered') { %>
                <button
                  class="btn btn-outline-warning"
                  onclick="requestReturn('<%= order._id %>')"
                >
                  <i class="bi bi-arrow-return-left"></i> Request Return
                </button>
                <% } %> <% if (order.status === 'Pending' || order.status ===
                'Processing') { %>
                <button
                  class="btn btn-outline-danger"
                  onclick="cancelOrder('<%= order._id %>')"
                >
                  <i class="bi bi-x-circle"></i> Cancel Order
                </button>
                <% } %>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Cancel Order Confirmation Modal -->
    <div
      class="modal fade"
      id="cancelOrderModal"
      tabindex="-1"
      aria-labelledby="cancelOrderModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="cancelOrderModalLabel">Cancel Order</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <p>Are you sure you want to cancel this order?</p>
            <form id="cancelOrderForm">
              <input
                type="hidden"
                id="cancelOrderId"
                name="orderId"
                value="<%= order._id %>"
              />
              <div class="mb-3">
                <label for="cancelReason" class="form-label"
                  >Reason for Cancellation</label
                >
                <select
                  class="form-select"
                  id="cancelReason"
                  name="reason"
                  required
                >
                  <option value="">Select a reason</option>
                  <option value="Changed my mind">Changed my mind</option>
                  <option value="Found better price elsewhere">
                    Found better price elsewhere
                  </option>
                  <option value="Ordered by mistake">Ordered by mistake</option>
                  <option value="Shipping time too long">
                    Shipping time too long
                  </option>
                  <option value="Other">Other</option>
                </select>
              </div>
              <div class="mb-3" id="otherReasonDiv" style="display: none">
                <label for="otherReason" class="form-label"
                  >Please specify</label
                >
                <textarea
                  class="form-control"
                  id="otherReason"
                  name="otherReason"
                  rows="2"
                ></textarea>
              </div>
            </form>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Close
            </button>
            <button type="button" class="btn btn-danger" id="confirmCancelBtn">
              Cancel Order
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Return Request Modal -->
    <div
      class="modal fade"
      id="returnRequestModal"
      tabindex="-1"
      aria-labelledby="returnRequestModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="returnRequestModalLabel">
              Request Return
            </h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <form id="returnRequestForm">
              <input
                type="hidden"
                id="returnOrderId"
                name="orderId"
                value="<%= order._id %>"
              />
              <div class="mb-3">
                <label for="returnReason" class="form-label"
                  >Reason for Return</label
                >
                <select
                  class="form-select"
                  id="returnReason"
                  name="reason"
                  required
                >
                  <option value="">Select a reason</option>
                  <option value="Item damaged">Item damaged</option>
                  <option value="Wrong item received">
                    Wrong item received
                  </option>
                  <option value="Item defective">Item defective</option>
                  <option value="Not as described">Not as described</option>
                  <option value="Other">Other</option>
                </select>
              </div>
              <div class="mb-3" id="returnOtherReasonDiv" style="display: none">
                <label for="returnOtherReason" class="form-label"
                  >Please specify</label
                >
                <textarea
                  class="form-control"
                  id="returnOtherReason"
                  name="otherReason"
                  rows="2"
                ></textarea>
              </div>
              <div class="mb-3">
                <label for="returnComments" class="form-label"
                  >Additional Comments</label
                >
                <textarea
                  class="form-control"
                  id="returnComments"
                  name="comments"
                  rows="3"
                ></textarea>
              </div>
            </form>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Close
            </button>
            <button type="button" class="btn btn-primary" id="confirmReturnBtn">
              Submit Request
            </button>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      // Handle "Other" reason selection
      document
        .getElementById("cancelReason")
        .addEventListener("change", function () {
          if (this.value === "Other") {
            document.getElementById("otherReasonDiv").style.display = "block";
          } else {
            document.getElementById("otherReasonDiv").style.display = "none";
          }
        });

      // Handle "Other" reason selection for returns
      document
        .getElementById("returnReason")
        .addEventListener("change", function () {
          if (this.value === "Other") {
            document.getElementById("returnOtherReasonDiv").style.display =
              "block";
          } else {
            document.getElementById("returnOtherReasonDiv").style.display =
              "none";
          }
        });

      // Download invoice
      function downloadInvoice(orderId) {
        window.location.href = `/invoice/${orderId}`;
      }

      // Cancel order
      function cancelOrder(orderId) {
        const cancelOrderModal = new bootstrap.Modal(
          document.getElementById("cancelOrderModal")
        );
        cancelOrderModal.show();
      }

      // Confirm cancel order
      document
        .getElementById("confirmCancelBtn")
        .addEventListener("click", function () {
          const form = document.getElementById("cancelOrderForm");
          if (form.checkValidity()) {
            const orderId = document.getElementById("cancelOrderId").value;
            const reason = document.getElementById("cancelReason").value;
            const otherReason = document.getElementById("otherReason").value;

            const cancelData = {
              orderId: orderId,
              reason: reason === "Other" ? otherReason : reason,
            };

            fetch("/cancelOrder", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(cancelData),
            })
              .then((response) => response.json())
              .then((data) => {
                if (data.success) {
                  const modal = bootstrap.Modal.getInstance(
                    document.getElementById("cancelOrderModal")
                  );
                  modal.hide();

                  Swal.fire({
                    icon: "success",
                    title: "Order cancelled successfully",
                    showConfirmButton: false,
                    timer: 1500,
                  }).then(() => {
                    window.location.reload();
                  });
                } else {
                  Swal.fire({
                    icon: "error",
                    title: "Order Cancellation Failed",
                    text: data.message || "Unknown error",
                  });
                }
              })
              .catch((error) => {
                console.error("Error:", error);
                Swal.fire({
                  icon: "error",
                  title: "Error",
                  text: "An error occurred while cancelling your order",
                });
              });
          } else {
            form.reportValidity();
          }
        });

      // Request return
      function requestReturn(orderId) {
        const returnModal = new bootstrap.Modal(
          document.getElementById("returnRequestModal")
        );
        returnModal.show();
      }

      // Confirm return request
      document
        .getElementById("confirmReturnBtn")
        .addEventListener("click", function () {
          const form = document.getElementById("returnRequestForm");
          if (form.checkValidity()) {
            const orderId = document.getElementById("returnOrderId").value;
            const reason = document.getElementById("returnReason").value;
            const otherReason =
              document.getElementById("returnOtherReason").value;
            const comments = document.getElementById("returnComments").value;

            const returnData = {
              orderId: orderId,
              reason: reason === "Other" ? otherReason : reason,
              comments: comments,
            };

            fetch("/requestReturn", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(returnData),
            })
              .then((response) => response.json())
              .then((data) => {
                if (data.success) {
                  const modal = bootstrap.Modal.getInstance(
                    document.getElementById("returnRequestModal")
                  );
                  modal.hide();

                  Swal.fire({
                    icon: "success",
                    title: "Return request submitted successfully",
                    showConfirmButton: false,
                    timer: 1500,
                  }).then(() => {
                    window.location.reload();
                  });
                } else {
                  Swal.fire({
                    icon: "error",
                    title: "Failed to submit return request",
                    text: data.message || "Unknown error",
                  });
                }
              })
              .catch((error) => {
                console.error("Error:", error);
                Swal.fire({
                  icon: "error",
                  title: "An error occurred",
                  text: "An error occurred while submitting your return request.",
                });
              });
          } else {
            form.reportValidity();
          }
        });
    </script>
  </body>
</html>
