<%- include("../partials/header.ejs") %>
<link
  href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css"
  rel="stylesheet"
/>

<style>
  /* Breadcrumb */
  .shop-breadcrumb {
    padding: 20px 0;
    background-color: #f6f6f6;
    margin-bottom: 40px;
  }

  .breadcrumb-content {
    display: flex;
    flex-direction: column;
  }

  .breadcrumb-content h2 {
    font-size: 30px;
    font-weight: 600;
    margin-bottom: 10px;
    color: #333;
  }

  .breadcrumb-content ol {
    display: flex;
    list-style: none;
    padding: 0;
    margin: 0;
    font-size: 14px;
  }

  .breadcrumb-content li + li:before {
    content: "â€º";
    padding: 0 8px;
    color: #777;
  }

  .breadcrumb-content a {
    color: #555;
    text-decoration: none;
    transition: color 0.3s;
  }

  .breadcrumb-content a:hover {
    color: #ff6a00;
  }
  .card-green {
    background-color: #add8e6;
  }
  .main {
    padding: 30px 0;
  }

  .dashboard-menu {
    background-color: #cce3e6;
    border-radius: 10px;
    padding: 15px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  }

  .dashboard-menu .nav-link {
    font-weight: bold;
    color: #30683c;
    box-shadow: 0 4px 10px rgba(123, 131, 112, 0.3),
      0 4px 20px rgba(0, 191, 255, 0.2);
    transition: box-shadow 0.3s ease;
  }

  .dashboard-menu .nav-link:hover {
    color: #00bfff;
    box-shadow: 0 4px 15px rgba(173, 255, 47, 0.5),
      0 6px 25px rgba(0, 191, 255, 0.4);
  }

  .card {
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
    margin-bottom: 20px;
  }

  .card-header {
    background-color: #487379;
    color: white;
    border-radius: 10px 10px 0 0;
  }

  .btn-success {
    background-color: #577194;
    border-color: #6bb87d;
  }

  .btn-success:hover {
    background-color: #506955;
  }

  .form-group {
    margin-bottom: 15px;
  }

  .required {
    color: red;
  }

  @media (max-width: 768px) {
    .dashboard-menu {
      padding: 10px;
    }

    .card {
      margin-bottom: 15px;
    }
  }

  .page-header.breadcrumb-wrap {
    background-color: #eee2e9;
    padding: 15px 0;
  }

  .breadcrumb {
    display: flex;
    align-items: center;
    font-family: "Arial", sans-serif;
    font-size: 16px;
    color: #121311;
  }

  .breadcrumb a {
    color: #007bff;
    text-decoration: none;
    position: relative;
    margin: 0 5px;
  }

  .breadcrumb a:hover {
    color: #0056b3;
  }

  .breadcrumb span {
    margin: 0 5px;
    color: #999;
  }

  .breadcrumb a::after {
    content: "";
    position: absolute;
    width: 100%;
    height: 2px;
    background: #6e6e3a;
    left: 0;
    bottom: -2px;
    transform: scaleX(0);
    transition: transform 0.3s ease;
  }

  .breadcrumb a:hover::after {
    transform: scaleX(1);
  }

  .sidebar {
    background-color: white;
    padding: 20px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    border-radius: 2px;
  }
  .sidebar h2 {
    font-size: 25px;
  }

  .sidebar a {
    color: #333;
    display: block;
    padding: 10px 0;
    text-decoration: none;
    transition: all 0.3s ease;
  }

  .sidebar a.active {
    color: #ffd700;
    font-weight: bold;
  }

  .sidebar a:hover {
    color: #ffd700;
    transform: translateX(5px);
  }

  .sidebar a i,
  .sidebar a svg {
    margin-right: 10px;
  }

  .main-content {
    min-width: 300px;
    max-width: 800px;
    background-color: white;
    padding: 25px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    border-radius: 2px;
  }

  .main-content h2 {
    margin-bottom: 20px;
    color: #333;
    border-bottom: 2px solid #f0f0f0;
    padding-bottom: 10px;
  }

  /* Wallet specific styles */
  .wallet-balance {
    background-color: #487379;
    color: white;
    border-radius: 10px;
    padding: 20px;
    margin-bottom: 20px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
  }

  .wallet-balance h3 {
    margin-bottom: 10px;
    font-size: 18px;
  }

  .wallet-balance .amount {
    font-size: 32px;
    font-weight: bold;
    margin-bottom: 10px;
  }

  .transaction-item {
    border-bottom: 1px solid #eee;
    padding: 15px 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .transaction-item:last-child {
    border-bottom: none;
  }

  .transaction-details {
    display: flex;
    flex-direction: column;
  }

  .transaction-title {
    font-weight: bold;
    margin-bottom: 5px;
  }

  .transaction-date {
    font-size: 12px;
    color: #777;
  }

  .transaction-amount {
    font-weight: bold;
  }

  .credit {
    color: #28a745;
  }

  .debit {
    color: #dc3545;
  }

  .wallet-actions {
    display: flex;
    gap: 10px;
    margin-bottom: 20px;
  }

  .wallet-tab-content {
    margin-top: 20px;
  }

  .no-transactions {
    text-align: center;
    padding: 20px;
    color: #777;
  }

  /* Add money form styles */
  .add-money-form {
    background-color: #f9f9f9;
    padding: 20px;
    border-radius: 10px;
    margin-bottom: 20px;
  }

  .add-money-form h4 {
    margin-bottom: 15px;
    color: #333;
  }
</style>
<div class="header-bottom header-sticky d-none d-lg-block d-xl-block mb-0">
  <div class="container">
    <div class="row">
      <div class="col-lg-12">
        <!-- Begin Header Bottom Menu Area -->
        <div class="hb-menu">
          <nav>
            <ul>
              <li class="dropdown-holder">
                <a href="/">Home</a>
              </li>
              <li class="megamenu-holder active">
                <a href="/products">Shop</a>
              </li>
              <li><a href="/cart">Cart</a></li>
              <li><a href="/about">About Us</a></li>
              <li><a href="/contact">Contact</a></li>
            </ul>
          </nav>
        </div>
        <!-- Header Bottom Menu Area End Here -->
      </div>
    </div>
  </div>
</div>
<!-- Sticky Header Area End -->

<!-- Begin Breadcrumb Area -->
<div class="shop-breadcrumb">
  <div class="container">
    <div class="row">
      <div class="col-12">
        <div class="breadcrumb-content">
          <ol>
            <li><a href="/">Home</a></li>
            <li>profile</li>
            <li>Wallet</li>
          </ol>
        </div>
      </div>
    </div>
  </div>
</div>
<!-- Breadcrumb Area End -->

<div class="container mt-3 mb-5">
  <div class="row justify-content-center">
    <!-- Sidebar -->
    <div class="col-md-3 col-sm-9 sidebar mx-1">
      <h2>My Account</h2>
      <a href="/userProfile"
        ><svg
          xmlns="http://www.w3.org/2000/svg"
          width="16"
          height="16"
          fill="currentColor"
          class="bi bi-person"
          viewBox="0 0 16 16"
        >
          <path
            d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6m2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0m4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4m-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10s-3.516.68-4.168 1.332c-.678.678-.83 1.418-.832 1.664z"
          />
        </svg>
        Details</a
      >
      <a href="/users/addresses"
        ><svg
          xmlns="http://www.w3.org/2000/svg"
          width="16"
          height="16"
          fill="currentColor"
          class="bi bi-geo-alt"
          viewBox="0 0 16 16"
        >
          <path
            d="M12.166 8.94c-.524 1.062-1.234 2.12-1.96 3.07A32 32 0 0 1 8 14.58a32 32 0 0 1-2.206-2.57c-.726-.95-1.436-2.008-1.96-3.07C3.304 7.867 3 6.862 3 6a5 5 0 0 1 10 0c0 .862-.305 1.867-.834 2.94M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10"
          />
          <path
            d="M8 8a2 2 0 1 1 0-4 2 2 0 0 1 0 4m0 1a3 3 0 1 0 0-6 3 3 0 0 0 0 6"
          />
        </svg>
        Address</a
      >
      <a href="/orders"
        ><svg
          xmlns="http://www.w3.org/2000/svg"
          width="16"
          height="16"
          fill="currentColor"
          class="bi bi-cart2"
          viewBox="0 0 16 16"
        >
          <path
            d="M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5M3.14 5l1.25 5h8.22l1.25-5zM5 13a1 1 0 1 0 0 2 1 1 0 0 0 0-2m-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0m9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2m-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0"
          />
        </svg>
        Orders</a
      >
      <a href="/wishlist"
        ><svg
          xmlns="http://www.w3.org/2000/svg"
          width="16"
          height="16"
          fill="currentColor"
          class="bi bi-heart"
          viewBox="0 0 16 16"
        >
          <path
            d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143q.09.083.176.171a3 3 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15"
          />
        </svg>
        Wishlist</a
      >
      <a href="/wallet" class="active"
        ><svg
          xmlns="http://www.w3.org/2000/svg"
          width="16"
          height="16"
          fill="currentColor"
          class="bi bi-wallet-fill"
          viewBox="0 0 16 16"
        >
          <path
            d="M1.5 2A1.5 1.5 0 0 0 0 3.5v2h6a.5.5 0 0 1 .5.5c0 .253.08.644.306.958.207.288.557.542 1.194.542s.987-.254 1.194-.542C9.42 6.644 9.5 6.253 9.5 6a.5.5 0 0 1 .5-.5h6v-2A1.5 1.5 0 0 0 14.5 2z"
          />
          <path
            d="M16 6.5h-5.551a2.7 2.7 0 0 1-.443 1.042C9.613 8.088 8.963 8.5 8 8.5s-1.613-.412-2.006-.958A2.7 2.7 0 0 1 5.551 6.5H0v6A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5z"
          />
        </svg>
        Wallet</a
      >
      <a href="/mycoupons"
        ><svg
          xmlns="http://www.w3.org/2000/svg"
          width="16"
          height="16"
          fill="currentColor"
          class="bi bi-cash"
          viewBox="0 0 16 16"
        >
          <path d="M8 10a2 2 0 1 0 0-4 2 2 0 0 0 0 4" />
          <path
            d="M0 4a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1zm3 0a2 2 0 0 1-2 2v4a2 2 0 0 1 2 2h10a2 2 0 0 1 2-2V6a2 2 0 0 1-2-2z"
          />
        </svg>
        My Coupons</a
      >
      <a href="#" onclick="confirmLogout(event)" class="text-danger mt-4"
        ><svg
          xmlns="http://www.w3.org/2000/svg"
          width="16"
          height="16"
          fill="currentColor"
          class="bi bi-box-arrow-right"
          viewBox="0 0 16 16"
        >
          <path
            fill-rule="evenodd"
            d="M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0z"
          />
          <path
            fill-rule="evenodd"
            d="M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708z"
          />
        </svg>
        Logout</a
      >
    </div>

    <!-- Main Content -->
    <div class="col-md-8 col-sm-9 main-content mx-1">
      <h2>My Wallet</h2>

      <!-- Wallet Balance -->
      <div class="wallet-balance">
        <h3>Available Balance</h3>
        <div class="amount">
          â‚¹<%= wallet ?
          wallet.balance.toLocaleString('en-In',{minimunFacionsDigist:2}) :
          '0.00' %>
        </div>
        <p>
          Last updated: <%= wallet && wallet.updatedAt ? new
          Date(wallet.updatedAt).toLocaleString() : 'Never' %>
        </p>
      </div>

      <!-- Wallet Actions -->
      <div class="wallet-actions">
        <button id="addMoneyBtn" class="btn btn-success">Add Money</button>
        <button id="withdrawBtn" class="btn btn-outline-secondary">
          Withdraw
        </button>
      </div>

      <!-- Add Money Form (initially hidden) -->
      <div id="addMoneyForm" class="add-money-form" style="display: none">
        <h4>Add Money to Wallet</h4>
        <form id="walletAddForm">
          <div class="form-group">
            <label for="amount"
              >Amount (â‚¹) <span class="text-danger">*</span></label
            >
            <input
              type="number"
              class="form-control"
              id="amount"
              name="amount"
              min="1"
              required
            />
          </div>
          <button type="submit" class="btn btn-primary">
            Proceed to Payment
          </button>
          <button
            type="button"
            class="btn btn-outline-secondary"
            id="cancelAddMoney"
          >
            Cancel
          </button>
        </form>
      </div>

      <!-- Withdraw Form (initially hidden) -->
      <div id="withdrawForm" class="add-money-form" style="display: none">
        <h4>Withdraw from Wallet</h4>
        <form id="walletWithdrawForm">
          <div class="form-group">
            <label for="withdrawAmount"
              >Amount (â‚¹) <span class="text-danger">*</span></label
            >
            <input
              type="number"
              class="form-control"
              id="withdrawAmount"
              name="withdrawAmount"
              min="1"
              max="<%= wallet ? wallet.balance : 0 %>"
              required
            />
          </div>
          <div class="form-group">
            <label for="accountNumber"
              >Bank Account Number <span class="text-danger">*</span></label
            >
            <input
              type="text"
              class="form-control"
              id="accountNumber"
              name="accountNumber"
              required
            />
          </div>
          <div class="form-group">
            <label for="ifscCode"
              >IFSC Code <span class="text-danger">*</span></label
            >
            <input
              type="text"
              class="form-control"
              id="ifscCode"
              name="ifscCode"
              required
            />
          </div>
          <button type="submit" class="btn btn-primary">
            Request Withdrawal
          </button>
          <button
            type="button"
            class="btn btn-outline-secondary"
            id="cancelWithdraw"
          >
            Cancel
          </button>
        </form>
      </div>

      <!-- Tabs for transaction history -->
      <ul class="nav nav-tabs mt-4" id="myTab" role="tablist">
        <li class="nav-item" role="presentation">
          <button
            class="nav-link active"
            id="all-tab"
            data-bs-toggle="tab"
            data-bs-target="#all-tab-pane"
            type="button"
            role="tab"
            aria-controls="all-tab-pane"
            aria-selected="true"
          >
            All Transactions
          </button>
        </li>
        <li class="nav-item" role="presentation">
          <button
            class="nav-link"
            id="credit-tab"
            data-bs-toggle="tab"
            data-bs-target="#credit-tab-pane"
            type="button"
            role="tab"
            aria-controls="credit-tab-pane"
            aria-selected="false"
          >
            Money Added
          </button>
        </li>
        <li class="nav-item" role="presentation">
          <button
            class="nav-link"
            id="debit-tab"
            data-bs-toggle="tab"
            data-bs-target="#debit-tab-pane"
            type="button"
            role="tab"
            aria-controls="debit-tab-pane"
            aria-selected="false"
          >
            Money Used
          </button>
        </li>
      </ul>

      <div class="tab-content wallet-tab-content" id="myTabContent">
        <!-- All Transactions Tab -->
        <div
          class="tab-pane fade show active"
          id="all-tab-pane"
          role="tabpanel"
          aria-labelledby="all-tab"
          tabindex="0"
        >
          <% if (transactions && transactions.length > 0) { %> <%
          transactions.forEach(function(transaction) { %>
          <div class="transaction-item">
            <div class="transaction-details">
              <div class="transaction-title">
                <%= transaction.description %>
              </div>
              <div class="transaction-date">
                <%= new Date(transaction.createdAt).toLocaleString() %>
              </div>
              <div class="transaction-id">
                Transaction ID: <%= transaction._id %>
              </div>
            </div>
            <div
              class="transaction-amount <%= transaction.type === 'credit' ? 'credit' : 'debit' %>"
            >
              <%= transaction.type === 'credit' ? '+' : '-' %>â‚¹<%=
              transaction.amount.toFixed(2) %>
            </div>
          </div>
          <% }); %> <% } else { %>
          <div class="no-transactions">
            <p>No transactions found</p>
          </div>
          <% } %>
        </div>

        <!-- Credit Transactions Tab -->
        <div
          class="tab-pane fade"
          id="credit-tab-pane"
          role="tabpanel"
          aria-labelledby="credit-tab"
          tabindex="0"
        >
          <% if (transactions && transactions.filter(t => t.type ===
          'credit').length > 0) { %> <% transactions.filter(t => t.type ===
          'credit').forEach(function(transaction) { %>
          <div class="transaction-item">
            <div class="transaction-details">
              <div class="transaction-title">
                <%= transaction.description %>
              </div>
              <div class="transaction-date">
                <%= new Date(transaction.createdAt).toLocaleString() %>
              </div>
              <div class="transaction-id">
                Transaction ID: <%= transaction._id %>
              </div>
            </div>
            <div class="transaction-amount credit">
              +â‚¹<%= transaction.amount.toFixed(2) %>
            </div>
          </div>
          <% }); %> <% } else { %>
          <div class="no-transactions">
            <p>No money has been added to your wallet yet</p>
          </div>
          <% } %>
        </div>

        <!-- Debit Transactions Tab -->
        <div
          class="tab-pane fade"
          id="debit-tab-pane"
          role="tabpanel"
          aria-labelledby="debit-tab"
          tabindex="0"
        >
          <% if (transactions && transactions.filter(t => t.type ===
          'debit').length > 0) { %> <% transactions.filter(t => t.type ===
          'debit').forEach(function(transaction) { %>
          <div class="transaction-item">
            <div class="transaction-details">
              <div class="transaction-title">
                <%= transaction.description %>
              </div>
              <div class="transaction-date">
                <%= new Date(transaction.createdAt).toLocaleString() %>
              </div>
              <div class="transaction-id">
                Transaction ID: <%= transaction._id %>
              </div>
            </div>
            <div class="transaction-amount debit">
              -â‚¹<%= transaction.amount.toFixed(2) %>
            </div>
          </div>
          <% }); %> <% } else { %>
          <div class="no-transactions">
            <p>No money has been spent from your wallet yet</p>
          </div>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  // Toggle Add Money Form
  document.getElementById("addMoneyBtn").addEventListener("click", function () {
    document.getElementById("addMoneyForm").style.display = "block";
    document.getElementById("withdrawForm").style.display = "none";
  });

  document
    .getElementById("cancelAddMoney")
    .addEventListener("click", function () {
      document.getElementById("addMoneyForm").style.display = "none";
    });

  // Toggle Withdraw Form
  document.getElementById("withdrawBtn").addEventListener("click", function () {
    document.getElementById("withdrawForm").style.display = "block";
    document.getElementById("addMoneyForm").style.display = "none";
  });

  document
    .getElementById("cancelWithdraw")
    .addEventListener("click", function () {
      document.getElementById("withdrawForm").style.display = "none";
    });

  // Add Money Form Submission
  document
    .getElementById("walletAddForm")
    .addEventListener("submit", async function (e) {
      e.preventDefault();

      const amount = document.getElementById("amount").value;

      if (amount <= 0) {
        Swal.fire({
          icon: "error",
          title: "Invalid Amount",
          text: "Please enter a valid amount greater than 0",
        });
        return;
      }

      try {
        const response = await fetch("/wallet/add", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ amount: parseFloat(amount) }),
        });

        const result = await response.json();

        if (result.success) {
          // Redirect to payment page or show success
          if (result.redirectUrl) {
            window.location.href = result.redirectUrl;
          } else {
            Swal.fire({
              icon: "success",
              title: "Success!",
              text: "Money added to wallet successfully",
              timer: 2000,
              showConfirmButton: false,
            }).then(() => {
              window.location.reload();
            });
          }
        } else {
          Swal.fire({
            icon: "error",
            title: "Oops...",
            text: result.message || "Failed to add money to wallet",
          });
        }
      } catch (error) {
        console.error("Error:", error);
        Swal.fire({
          icon: "error",
          title: "Oops...",
          text: "An unexpected error occurred. Please try again.",
        });
      }
    });

  // Withdraw Form Submission
  document
    .getElementById("walletWithdrawForm")
    .addEventListener("submit", async function (e) {
      e.preventDefault();

      const amount = document.getElementById("withdrawAmount").value;
      const accountNumber = document.getElementById("accountNumber").value;
      const ifscCode = document.getElementById("ifscCode").value;

      if (amount <= 0) {
        Swal.fire({
          icon: "error",
          title: "Invalid Amount",
          text: "Please enter a valid amount greater than 0",
        });
        return;
      }

      try {
        const response = await fetch("/wallet/withdraw", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            amount: parseFloat(amount),
            accountNumber,
            ifscCode,
          }),
        });

        const result = await response.json();

        if (result.success) {
          Swal.fire({
            icon: "success",
            title: "Success!",
            text: "Withdrawal request submitted successfully",
            timer: 2000,
            showConfirmButton: false,
          }).then(() => {
            window.location.reload();
          });
        } else {
          Swal.fire({
            icon: "error",
            title: "Oops...",
            text: result.message || "Failed to process withdrawal request",
          });
        }
      } catch (error) {
        console.error("Error:", error);
        Swal.fire({
          icon: "error",
          title: "Oops...",
          text: "An unexpected error occurred. Please try again.",
        });
      }
    });

  // Function to confirm logout
  function confirmLogout(event) {
    event.preventDefault();

    Swal.fire({
      title: "Logout Confirmation",
      text: "Are you sure you want to logout?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Yes, logout!",
    }).then((result) => {
      if (result.isConfirmed) {
        fetch("/logout", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
        }).then((window.location.href = "/"));
      }
    });
  }

  // Format currency
  function formatCurrency(amount) {
    return new Intl.NumberFormat("en-IN", {
      style: "currency",
      currency: "INR",
    }).format(amount);
  }

  // Display notifications if any
  if (locals.success) {
    Swal.fire({
      icon: "success",
      title: "Success!",
      text: "<%= locals.success %>",
      timer: 3000,
      showConfirmButton: false,
    });
  }

  if (locals.error) {
    Swal.fire({
      icon: "error",
      title: "Error!",
      text: "<%= locals.error %>",
      timer: 3000,
      showConfirmButton: false,
    });
  }
</script>

<%- include("../partials/footer.ejs") %>
