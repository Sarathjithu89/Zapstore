<%- include('../partials2/header.ejs') %>

<!-- Bootstrap CSS -->
<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css"
/>
<style>
  .table-th th {
    text-align: center;
    color: white;
  }
</style>

<main id="main">
  <!-- Breadcrumbs-->
  <div class="bg-light border-bottom py-3">
    <div class="container-fluid">
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb m-0">
          <li class="breadcrumb-item"><a href="/admin/dashboard">Home</a></li>
          <li class="breadcrumb-item active" aria-current="page">
            Order Management
          </li>
        </ol>
      </nav>
    </div>
  </div>
  <!-- / Breadcrumbs-->

  <div class="container-fluid py-4">
    <div class="row justify-content-center">
      <div class="col-12">
        <!-- Search and Filter Form -->
        <div class="card mb-4 shadow-sm">
          <div class="card-body">
            <form action="" method="get" class="row g-3 align-items-end">
              <div class="col-md-4">
                <input
                  type="text"
                  class="form-control"
                  placeholder="Search by Order ID or Customer name"
                  name="search"
                  value="<%= search ? search : '' %>"
                  aria-label="Search orders"
                />
              </div>
              <div class="col-md-2">
                <button class="btn btn-primary w-100" type="submit">
                  <i class="bi bi-search"></i> Search
                </button>
              </div>
              <div class="col-md-2">
                <button
                  class="btn btn-success w-100"
                  type="button"
                  onclick="exportOrders()"
                >
                  <i class="bi bi-download"></i> Export
                </button>
              </div>
              <div class="col-md-2">
                <a href="/admin/orders" class="btn btn-outline-secondary w-100">
                  <i class="bi bi-x-circle"></i> Clear
                </a>
              </div>
            </form>
          </div>
        </div>

        <!-- Orders Table -->
        <div class="card shadow-sm">
          <div class="card-body p-0">
            <div class="table-responsive">
              <table class="table table-hover mb-0" aria-label="Orders table">
                <thead class="bg-primary table-th">
                  <tr>
                    <th scope="col">Order ID</th>
                    <th scope="col">Customer</th>
                    <th scope="col">Date</th>
                    <th scope="col">Items</th>
                    <th scope="col">Total Amount</th>
                    <th scope="col">Payment Method</th>
                    <th scope="col">Payment Status</th>
                    <th scope="col">Order Status</th>
                    <th scope="col">Actions</th>
                  </tr>
                </thead>
                <tbody>
                  <% if(orders && orders.length > 0) { %> <%
                  orders.forEach(order => { %>
                  <tr>
                    <td><%= order.orderId %></td>
                    <td><%= order.userId.name %></td>
                    <td>
                      <%= new Date(order.createdAt).toLocaleString('en-US', {
                      year: 'numeric', month: 'short', day: 'numeric', hour:
                      '2-digit', minute: '2-digit' }) %>
                    </td>
                    <td>
                      <%= order.orderedItems.reduce((sum, item) => sum +
                      item.quantity, 0) %>
                    </td>
                    <td>â‚¹<%= order.finalAmount.toLocaleString() %></td>
                    <td><%= order.paymentMethod %></td>
                    <td>
                      <% if(order.paymentStatus === 'Paid') { %>
                      <span class="badge bg-success">Paid</span>
                      <% } else if(order.paymentStatus === 'Refunded') { %>
                      <span class="badge bg-info">Refunded</span>
                      <% } else { %>
                      <span class="badge bg-warning text-dark">Not Paid</span>
                      <% } %>
                    </td>
                    <td>
                      <% if(order.status === 'Pending') { %>
                      <span class="badge bg-warning text-dark">Pending</span>
                      <% } else if(order.status === 'Processing') { %>
                      <span class="badge bg-info">Processing</span>
                      <% } else if(order.status === 'Shipped') { %>
                      <span class="badge bg-primary">Shipped</span>
                      <% } else if(order.status === 'Delivered') { %>
                      <span class="badge bg-success">Delivered</span>
                      <% } else if(order.status === 'Cancelled') { %>
                      <span class="badge bg-danger">Cancelled</span>
                      <% } else if(order.status === 'Return Requested') { %>
                      <span class="badge bg-secondary">Return Request</span>
                      <% } else if(order.status === 'Returned') { %>
                      <span class="badge bg-info">Returned</span>
                      <% } %>
                    </td>
                    <td>
                      <div class="btn-group btn-group-sm">
                        <button
                          class="btn btn-sm btn-info"
                          onclick="viewOrderDetails('<%= order._id %>')"
                          title="View details"
                        >
                          <i class="bi bi-eye"></i>
                        </button>

                        <button
                          class="btn btn-sm btn-primary ms-1"
                          onclick="updateOrderStatus('<%= order._id %>', '<%= order.status %>')"
                          title="Update status"
                        >
                          <i class="bi bi-arrow-repeat"></i>
                        </button>

                        <% if(order.status === 'Return Requested') { %>
                        <button
                          class="btn btn-sm btn-warning ms-1"
                          onclick="processReturnRequest('<%= order._id %>')"
                          title="Process return"
                        >
                          <i class="bi bi-box-arrow-in-left"></i>
                        </button>
                        <% } %>
                      </div>
                    </td>
                  </tr>
                  <% }); %> <% } else { %>
                  <tr>
                    <td colspan="9" class="text-center py-5">
                      <i
                        class="bi bi-exclamation-circle fs-1 text-secondary"
                      ></i>
                      <p class="mt-3 text-muted">No orders found</p>
                    </td>
                  </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>

        <!-- Pagination -->
        <div class="mt-4"><%- include("../partials2/pagination.ejs") %></div>
      </div>
    </div>
  </div>

  <!-- Order Details Modal -->
  <div
    class="modal fade"
    id="orderDetailsModal"
    tabindex="-1"
    aria-labelledby="orderDetailsModalLabel"
    aria-hidden="true"
  >
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="orderDetailsModalLabel">Order Details</h5>
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="modal"
            aria-label="Close"
          ></button>
        </div>
        <div class="modal-body" id="orderDetailsContent">
          <!-- Content will be loaded dynamically -->
        </div>
        <div class="modal-footer">
          <button
            type="button"
            class="btn btn-secondary"
            data-bs-dismiss="modal"
          >
            Close
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Update Status Modal -->
  <div
    class="modal fade"
    id="updateStatusModal"
    tabindex="-1"
    aria-labelledby="updateStatusModalLabel"
    aria-hidden="true"
  >
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="updateStatusModalLabel">
            Update Order Status
          </h5>
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="modal"
            aria-label="Close"
          ></button>
        </div>
        <div class="modal-body">
          <form
            id="updateStatusForm"
            action="/admin/updateOrderStatus"
            method="post"
          >
            <input type="hidden" id="orderId" name="orderId" />

            <div class="mb-3">
              <label for="orderStatus" class="form-label">Order Status</label>
              <select
                id="orderStatus"
                name="status"
                class="form-select"
                required
              >
                <option value="Pending">Pending</option>
                <option value="Processing">Processing</option>
                <option value="Shipped">Shipped</option>
                <option value="Delivered">Delivered</option>
                <option value="Cancelled">Cancelled</option>
              </select>
            </div>

            <div class="d-flex justify-content-end gap-2">
              <button
                type="button"
                class="btn btn-secondary"
                data-bs-dismiss="modal"
              >
                Cancel
              </button>
              <button type="submit" class="btn btn-primary">
                Update Status
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- Process Return Modal -->
  <div
    class="modal fade"
    id="processReturnModal"
    tabindex="-1"
    aria-labelledby="processReturnModalLabel"
    aria-hidden="true"
  >
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="processReturnModalLabel">
            Process Return Request
          </h5>
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="modal"
            aria-label="Close"
          ></button>
        </div>
        <div class="modal-body">
          <form
            id="processReturnForm"
            action="/admin/processReturn"
            method="post"
          >
            <input type="hidden" id="returnOrderId" name="orderId" />

            <div class="mb-3">
              <label class="form-label">Approve Return Request?</label>
              <p class="mb-3 text-muted small">
                Approving this return will refund the amount to the customer's
                wallet and update inventory.
              </p>

              <div class="form-check">
                <input
                  class="form-check-input"
                  type="radio"
                  name="returnAction"
                  id="approveReturn"
                  value="approve"
                  required
                />
                <label class="form-check-label" for="approveReturn">
                  Approve Return
                </label>
              </div>
              <div class="form-check">
                <input
                  class="form-check-input"
                  type="radio"
                  name="returnAction"
                  id="rejectReturn"
                  value="reject"
                />
                <label class="form-check-label" for="rejectReturn">
                  Reject Return
                </label>
              </div>
            </div>

            <div class="mb-3">
              <label for="returnNotes" class="form-label"
                >Notes (Optional)</label
              >
              <textarea
                id="returnNotes"
                name="notes"
                class="form-control"
                rows="3"
                placeholder="Add notes about the return decision"
              ></textarea>
            </div>

            <div class="d-flex justify-content-end gap-2">
              <button
                type="button"
                class="btn btn-secondary"
                data-bs-dismiss="modal"
              >
                Cancel
              </button>
              <button type="submit" class="btn btn-primary">Submit</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</main>

<!-- Scripts -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

<script>
  // View Order Details
  function viewOrderDetails(orderId) {
    $.ajax({
      url: "/admin/getOrderDetails/" + orderId,
      method: "get",
      success: (response) => {
        if (response.status) {
          const order = response.order;
          let itemsHtml = "";

          // Build HTML for ordered items
          order.orderedItems.forEach((item) => {
            itemsHtml += `
              <tr>
                <td>
                  <img src="/uploads/product-images/${
                    item.product.productImage[0]
                  }" 
                       alt="${item.product.productName}" 
                       class="img-thumbnail" style="width: 50px; height: 50px;">
                </td>
                <td>${item.product.productName}</td>
                <td>â‚¹${item.price.toLocaleString()}</td>
                <td>${item.quantity}</td>
                <td>â‚¹${(item.price * item.quantity).toLocaleString()}</td>
              </tr>
            `;
          });

          // Customer address
          let address = {
            name: "N/A",
            addressLine: "N/A",
            landMark: "N/A",
            city: "N/A",
            state: "N/A",
            country: "N/A",
            pincode: "N/A",
            altPhone: "N/A",
            phone: "N/A",
          };

          if (order.address) {
            address = {
              name: order.address.name || "N/A",
              addressLine: order.address.addressLine || "N/A",
              city: order.address.city || "N/A",
              state: order.address.state || "N/A",
              country: order.address.country || "N/A",
              pincode: order.address.pincode || "N/A",
              phone: order.address.phone || "N/A",
              altPhone: order.address.altPhone || "N/A",
              landMark: order.address.landMark || "N/A",
            };
          }

          // Build the complete modal content
          const modalContent = `
            <div class="container-fluid p-0">
              <div class="row mb-3">
                <div class="col-md-6">
                  <h6 class="fw-bold">Order #${order.orderId}</h6>
                  <p class="mb-1"><strong>Date:</strong> ${new Date(
                    order.createdAt
                  ).toLocaleString()}</p>
                  <p class="mb-1"><strong>Customer:</strong> ${
                    order.userId.name
                  } (${order.userId.email})</p>
                  <p class="mb-1"><strong>Payment Method:</strong> ${
                    order.paymentMethod
                  }</p>
                  <p class="mb-1"><strong>Payment Id:</strong> ${
                    order.onlinePaymentId ? order.onlinePaymentId : "N/A"
                  }</p>
                  <p class="mb-1"><strong>Payment Status:</strong> ${
                    order.status
                  }</p>
                  <p class="mb-1"><strong>Status:</strong> ${order.status}</p>
                </div>
                
                <div class="col-md-6">
                  <h6 class="fw-bold">Shipping Address</h6>
                  <p class="mb-0">
                    ${address.name}<br>
                    ${address.addressLine}, ${address.city}, ${
            address.state
          }<br>
                    ${address.landMark}<br>
                    ${address.country} - ${address.pincode}<br>
                    Phone: ${address.mobile}
                    Alternate Phone: ${address.altPhone}
                  </p>
                </div>
              </div>
              
              <hr>
              
              <h6 class="fw-bold mb-3">Order Items</h6>
              <div class="table-responsive">
                <table class="table table-sm table-bordered">
                  <thead class="table-light">
                    <tr>
                      <th>Image</th>
                      <th>Product</th>
                      <th>Price</th>
                      <th>Qty</th>
                      <th>Total</th>
                    </tr>
                  </thead>
                  <tbody>
                    ${itemsHtml}
                  </tbody>
                </table>
              </div>
              
              <div class="row mt-3">
                <div class="col-md-6 offset-md-6">
                  <table class="table table-sm">
                    <tr>
                      <td>Subtotal:</td>
                      <td class="text-end">â‚¹${order.totalPrice.toLocaleString()}</td>
                    </tr>
                    <tr>
                      <td>Discount:</td>
                      <td class="text-end">-â‚¹${order.discount.toLocaleString()}</td>
                    </tr>
                    <tr class="table-active">
                      <td><strong>Total:</strong></td>
                      <td class="text-end"><strong>â‚¹${order.finalAmount.toLocaleString()}</strong></td>
                    </tr>
                  </table>
                </div>
              </div>
            </div>
          `;

          document.getElementById("orderDetailsContent").innerHTML =
            modalContent;
          const orderDetailsModal = new bootstrap.Modal(
            document.getElementById("orderDetailsModal")
          );
          orderDetailsModal.show();
        } else {
          Swal.fire(
            "Error",
            response.message || "Failed to load order details",
            "error"
          );
        }
      },
      error: (error) => {
        console.error("Error:", error);
        Swal.fire("Error", "An unexpected error occurred", "error");
      },
    });
  }

  // Update Order Status
  function updateOrderStatus(orderId, currentStatus) {
    document.getElementById("orderId").value = orderId;
    document.getElementById("orderStatus").value = currentStatus;
    const updateStatusModal = new bootstrap.Modal(
      document.getElementById("updateStatusModal")
    );
    updateStatusModal.show();
  }

  // Process Return Request
  function processReturnRequest(orderId) {
    document.getElementById("returnOrderId").value = orderId;
    const processReturnModal = new bootstrap.Modal(
      document.getElementById("processReturnModal")
    );
    processReturnModal.show();
  }

  // Form submission handlers
  document
    .getElementById("updateStatusForm")
    .addEventListener("submit", function (e) {
      e.preventDefault();

      const orderId = document.getElementById("orderId").value;
      const status = document.getElementById("orderStatus").value;

      $.ajax({
        url: "/admin/updateOrderStatus",
        method: "post",
        data: {
          orderId: orderId,
          status: status,
        },
        success: (response) => {
          const updateStatusModal = bootstrap.Modal.getInstance(
            document.getElementById("updateStatusModal")
          );
          updateStatusModal.hide();

          if (response.status) {
            Swal.fire({
              title: "Success!",
              text: "Order status updated successfully",
              icon: "success",
              confirmButtonText: "OK",
            }).then(() => {
              window.location.reload();
            });
          } else {
            Swal.fire(
              "Error",
              response.message || "Failed to update order status",
              "error"
            );
          }
        },
        error: (error) => {
          const updateStatusModal = bootstrap.Modal.getInstance(
            document.getElementById("updateStatusModal")
          );
          updateStatusModal.hide();

          console.error("Error:", error);
          Swal.fire("Error", "An unexpected error occurred", "error");
        },
      });
    });

  document
    .getElementById("processReturnForm")
    .addEventListener("submit", function (e) {
      e.preventDefault();

      const formData = new FormData(this);
      const returnAction = formData.get("returnAction");

      $.ajax({
        url: "/admin/processReturn",
        method: "post",
        data: {
          orderId: formData.get("orderId"),
          returnAction: returnAction,
          notes: formData.get("notes"),
        },
        success: (response) => {
          const processReturnModal = bootstrap.Modal.getInstance(
            document.getElementById("processReturnModal")
          );
          processReturnModal.hide();

          if (response.status) {
            Swal.fire({
              title: "Success!",
              text:
                returnAction === "approve"
                  ? "Return request approved and refund processed"
                  : "Return request rejected",
              icon: "success",
              confirmButtonText: "OK",
            }).then(() => {
              window.location.reload();
            });
          } else {
            Swal.fire(
              "Error",
              response.message || "Failed to process return request",
              "error"
            );
          }
        },
        error: (error) => {
          const processReturnModal = bootstrap.Modal.getInstance(
            document.getElementById("processReturnModal")
          );
          processReturnModal.hide();

          console.error("Error:", error);
          Swal.fire("Error", "An unexpected error occurred", "error");
        },
      });
    });

  // Display error/success messages if they exist in the session
  document.addEventListener("DOMContentLoaded", function () {
    const urlParams = new URLSearchParams(window.location.search);
    const successMsg = urlParams.get("success");
    const errorMsg = urlParams.get("error");

    if (successMsg) {
      Swal.fire({
        title: "Success!",
        text: decodeURIComponent(successMsg),
        icon: "success",
        confirmButtonText: "OK",
      });
    } else if (errorMsg) {
      Swal.fire({
        title: "Error!",
        text: decodeURIComponent(errorMsg),
        icon: "error",
        confirmButtonText: "OK",
      });
    }
  });

  // Export orders functionality
  function exportOrders() {
    // Get current filter parameters
    const searchParams = new URLSearchParams(window.location.search);
    let exportURL = "/admin/exportOrders?";

    // Add all current search parameters
    for (const [key, value] of searchParams.entries()) {
      exportURL += `${key}=${encodeURIComponent(value)}&`;
    }

    // Redirect to export endpoint
    window.location.href = exportURL;
  }
</script>
<!-- Bootstrap 5 JS and dependencies -->
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"></script>
<script
  src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/js/bootstrap.bundle.min.js"
  integrity="sha384-k6d4wzSIapyDyv1kpU366/PK5hCdSbCRGRCMv+eplOQJWyd1fbcAu9OCUj5zNLiq"
  crossorigin="anonymous"
></script>
<%- include('../partials2/footer.ejs') %>
